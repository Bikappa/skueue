input File {
  # name and extension of the file
  name: String!
  data: String!
}

input LibraryDescription {
  name: String!
  version: String!
}

input SketchMetadata {
  includedLibs: [LibraryDescription!]
}

input Sketch {
  name: String!
  files: [File!]
  ino: File!
  metadata: SketchMetadata
}

input CompilationParameters {
  fqbn: String!
  sketch: Sketch!
  # ota is not implemented, has no effect
  ota: Boolean = false
  verbose: Boolean = false
}

type EnqueuedCompilationJob {
  id: String!
  resourceType: String!
  queuedAt: String!
  status: String!
  completedAt: String
  expiresAt: String
}

type Query {
  compilation(compilationId: String!): EnqueuedCompilationJob
}

type Mutation {
  startCompilation(
    compilationParameters: CompilationParameters!
  ): EnqueuedCompilationJob
}

type LogLineMessage {
  resourceType: String!
  messageType: String!
  text: String!
}

type JobUpdateMessage {
  resourceType: String!
  messageType: String!
  compilationJob: EnqueuedCompilationJob!
}

type Subscription {
  compilationUpdate(compilationId: String!): JobUpdateMessage
  compilationLog(compilationId: String!): LogLineMessage
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
